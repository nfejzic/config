# set scroll history to 100,000 lines
set-option -g history-limit 100000

# don't exit tmux when last window is closed, switch to
# another session instead
set-option -g detach-on-destroy off

# unbind the prefix and bind it to Alt-Space
set -g prefix 'M-space'

# enter selection mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-selection

# exit on any of these
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi o send -X cancel
bind -T copy-mode-vi C-[ send -X cancel
bind -T copy-mode-vi Enter send -X cancel

# Avoid ESC delay
set -s escape-time 0

# VIM mode
set -g mode-keys vi

# enter copy mode:
bind x copy-mode

# Mouse friendly
set -g mouse on

# Move between panes with vi keys
unbind C-l
unbind C-h
unbind C-j
unbind C-k
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Resize panes with vi keys
bind -n M-H resize-pane -L 3
bind -n M-J resize-pane -D 3
bind -n M-K resize-pane -U 3
bind -n M-L resize-pane -R 3

# Split panes and create windows in current directory
bind -n 'M-d' split-window -h -c "#{pane_current_path}"
bind -n 'M-D' split-window -c "#{pane_current_path}"
bind -n 'M-t' new-window -a -c "#{pane_current_path}"
bind -n 'M-T' new-window -c "#{pane_current_path}"
bind 'f' run-shell "tmux neww $HOME/.config/tmux/bin/tmux-sessionizer"
bind 's' run-shell "tmux neww $HOME/.config/tmux/bin/tmux-fuzzy-choose-session"
bind 'M-space' switch-client -l

bind -n 'M-n' next-window
bind -n 'M-p' previous-window
bind -n 'M-w' kill-pane

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

bind-key -n 'M-1' selectw -t 1
bind-key -n 'M-2' selectw -t 2
bind-key -n 'M-3' selectw -t 3
bind-key -n 'M-4' selectw -t 4
bind-key -n 'M-5' selectw -t 5
bind-key -n 'M-6' selectw -t 6
bind-key -n 'M-7' selectw -t 7
bind-key -n 'M-8' selectw -t 8
bind-key -n 'M-9' selectw -t 9

# select window by clicking on it
bind-key -n MouseUp1Status selectw -t =
bind-key -n MouseUp1Pane selectp -t =

bind 'h' detach-client

# bind key for config reload
bind 'r' source-file "$HOME/.config/tmux/tmux.conf"

######################
### DESIGN CHANGES ###
######################

# whatever terminal I'm using, helps with undercurls etc
set -g default-terminal "${TERM}"
TERM=xterm-256color

set-hook -g after-new-window 'renamew ""'
set-hook -g session-created 'renamew ""'

# make sure windows are always renumbered
set-option -g renumber-windows on
set-option -g allow-set-title on
set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W' # window number,program name,active (or not)
set-option -g automatic-rename on
set-option -g allow-rename off

  
set-option -g update-environment "CLI_THEME"

# color theme
# source-file $HOME/.config/tmux/themes/init.conf
source-file $HOME/.config/tmux/themes/termcolor.conf


set-option -g @ssh-split-keep-cwd "true"
set-option -g @ssh-split-keep-remote-cwd "true"
set-option -g @ssh-split-fail "false"
set-option -g @ssh-split-no-env "false"
set-option -g @ssh-split-no-shell "false"
set-option -g @ssh-split-strip-cmd "true"
set-option -g @ssh-split-verbose "true"
set-option -g @ssh-split-debug "false"
set-option -g @ssh-split-h-key "l"
set-option -g @ssh-split-v-key "j"
set-option -g @ssh-split-w-key "t"

###############
### PLUGINS ###
###############
# TODO: figure out good way to handle plugins
# run-shell ~/.config/tmux/plugins/tmux-ssh-split/ssh-split.tmux
# run-shell ~/.config/tmux/plugins/tmux-sensible/sensible.tmux
# run-shell ~/.config/tmux/plugins/tmux-fingers/tmux-fingers.tmux

# smart 
set -g @smart-splits_no_wrap '' # to disable wrapping. (any value disables wrapping)

set -g @smart-splits_move_left_key  'M-h' # key-mapping for navigation.
set -g @smart-splits_move_down_key  'M-j' #  --"--
set -g @smart-splits_move_up_key    'M-k' #  --"--
set -g @smart-splits_move_right_key 'M-l' #  --"--

set -g @smart-splits_resize_left_key  'M-H' # key-mapping for resizing.
set -g @smart-splits_resize_down_key  'M-J' #  --"--
set -g @smart-splits_resize_up_key    'M-K' #  --"--
set -g @smart-splits_resize_right_key 'M-L' #  --"--

set -g @smart-splits_resize_step_size '3' # change the step-size for resizing.
run-shell $HOME/.config/tmux/plux/smart-splits/smart-splits.tmux

# rebind kill-pane to take into consideration neovim bindings, similar to other
# smart-splits configurations
bind -n 'M-w' if -F "#{@pane-is-vim}" 'send-keys M-w' 'kill-pane'
